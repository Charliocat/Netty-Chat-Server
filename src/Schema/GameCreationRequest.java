// automatically generated by the FlatBuffers compiler, do not modify

package Schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class GameCreationRequest extends Table {
  public static GameCreationRequest getRootAsGameCreationRequest(ByteBuffer _bb) { return getRootAsGameCreationRequest(_bb, new GameCreationRequest()); }
  public static GameCreationRequest getRootAsGameCreationRequest(ByteBuffer _bb, GameCreationRequest obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public GameCreationRequest __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public String name() { int o = __offset(4); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer nameAsByteBuffer() { return __vector_as_bytebuffer(4, 1); }
  public String type() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer typeAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public short capacity() { int o = __offset(8); return o != 0 ? bb.getShort(o + bb_pos) : 0; }
  public String password() { int o = __offset(10); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer passwordAsByteBuffer() { return __vector_as_bytebuffer(10, 1); }
  public short bestOf() { int o = __offset(12); return o != 0 ? bb.getShort(o + bb_pos) : 0; }

  public static int createGameCreationRequest(FlatBufferBuilder builder,
      int nameOffset,
      int typeOffset,
      short capacity,
      int passwordOffset,
      short bestOf) {
    builder.startObject(5);
    GameCreationRequest.addPassword(builder, passwordOffset);
    GameCreationRequest.addType(builder, typeOffset);
    GameCreationRequest.addName(builder, nameOffset);
    GameCreationRequest.addBestOf(builder, bestOf);
    GameCreationRequest.addCapacity(builder, capacity);
    return GameCreationRequest.endGameCreationRequest(builder);
  }

  public static void startGameCreationRequest(FlatBufferBuilder builder) { builder.startObject(5); }
  public static void addName(FlatBufferBuilder builder, int nameOffset) { builder.addOffset(0, nameOffset, 0); }
  public static void addType(FlatBufferBuilder builder, int typeOffset) { builder.addOffset(1, typeOffset, 0); }
  public static void addCapacity(FlatBufferBuilder builder, short capacity) { builder.addShort(2, capacity, 0); }
  public static void addPassword(FlatBufferBuilder builder, int passwordOffset) { builder.addOffset(3, passwordOffset, 0); }
  public static void addBestOf(FlatBufferBuilder builder, short bestOf) { builder.addShort(4, bestOf, 0); }
  public static int endGameCreationRequest(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 4);  // name
    builder.required(o, 6);  // type
    return o;
  }
}

