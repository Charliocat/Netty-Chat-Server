// automatically generated by the FlatBuffers compiler, do not modify

package Schema;

import java.nio.*;
import java.lang.*;
import java.util.*;
import com.google.flatbuffers.*;

@SuppressWarnings("unused")
public final class Chat extends Table {
  public static Chat getRootAsChat(ByteBuffer _bb) { return getRootAsChat(_bb, new Chat()); }
  public static Chat getRootAsChat(ByteBuffer _bb, Chat obj) { _bb.order(ByteOrder.LITTLE_ENDIAN); return (obj.__assign(_bb.getInt(_bb.position()) + _bb.position(), _bb)); }
  public void __init(int _i, ByteBuffer _bb) { bb_pos = _i; bb = _bb; }
  public Chat __assign(int _i, ByteBuffer _bb) { __init(_i, _bb); return this; }

  public long timestamp() { int o = __offset(4); return o != 0 ? bb.getLong(o + bb_pos) : 0L; }
  public String author() { int o = __offset(6); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer authorAsByteBuffer() { return __vector_as_bytebuffer(6, 1); }
  public String message() { int o = __offset(8); return o != 0 ? __string(o + bb_pos) : null; }
  public ByteBuffer messageAsByteBuffer() { return __vector_as_bytebuffer(8, 1); }

  public static int createChat(FlatBufferBuilder builder,
      long timestamp,
      int authorOffset,
      int messageOffset) {
    builder.startObject(3);
    Chat.addTimestamp(builder, timestamp);
    Chat.addMessage(builder, messageOffset);
    Chat.addAuthor(builder, authorOffset);
    return Chat.endChat(builder);
  }

  public static void startChat(FlatBufferBuilder builder) { builder.startObject(3); }
  public static void addTimestamp(FlatBufferBuilder builder, long timestamp) { builder.addLong(0, timestamp, 0L); }
  public static void addAuthor(FlatBufferBuilder builder, int authorOffset) { builder.addOffset(1, authorOffset, 0); }
  public static void addMessage(FlatBufferBuilder builder, int messageOffset) { builder.addOffset(2, messageOffset, 0); }
  public static int endChat(FlatBufferBuilder builder) {
    int o = builder.endObject();
    builder.required(o, 6);  // author
    builder.required(o, 8);  // message
    return o;
  }
}

